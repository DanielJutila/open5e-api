# Generated by Django 3.2.18 on 2023-04-13 01:49

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0011_auto_20230320_2130'),
    ]

    operations = [
        migrations.AlterField(
            model_name='archetype',
            name='desc',
            field=models.TextField(help_text='Description of the game content item. Markdown.'),
        ),
        migrations.AlterField(
            model_name='archetype',
            name='name',
            field=models.TextField(help_text='Name of the game content item.'),
        ),
        migrations.AlterField(
            model_name='archetype',
            name='slug',
            field=models.CharField(default=uuid.uuid1, help_text='Short name for the game content item.', max_length=255, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='armor',
            name='category',
            field=models.TextField(help_text='Category of the armor, such as "Heavy Armor"'),
        ),
        migrations.AlterField(
            model_name='armor',
            name='cost',
            field=models.TextField(help_text='Suggested cost of the weapon, such as "100 gp"'),
        ),
        migrations.AlterField(
            model_name='armor',
            name='desc',
            field=models.TextField(help_text='Description of the game content item. Markdown.'),
        ),
        migrations.AlterField(
            model_name='armor',
            name='name',
            field=models.TextField(help_text='Name of the game content item.'),
        ),
        migrations.AlterField(
            model_name='armor',
            name='slug',
            field=models.CharField(default=uuid.uuid1, help_text='Short name for the game content item.', max_length=255, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='armor',
            name='stealth_disadvantage',
            field=models.BooleanField(verbose_name='Boolean representing whether wearing the armor results in stealth disadvantage for the wearer.'),
        ),
        migrations.AlterField(
            model_name='armor',
            name='weight',
            field=models.TextField(help_text='Apparently an empty string.'),
        ),
        migrations.AlterField(
            model_name='background',
            name='desc',
            field=models.TextField(help_text='Description of the game content item. Markdown.'),
        ),
        migrations.AlterField(
            model_name='background',
            name='equipment',
            field=models.TextField(help_text='Markdown description of equipment held by characters with this background.'),
        ),
        migrations.AlterField(
            model_name='background',
            name='feature',
            field=models.TextField(help_text='Title of a feature this background grants.'),
        ),
        migrations.AlterField(
            model_name='background',
            name='feature_desc',
            field=models.TextField(help_text='Description of the related background feature.'),
        ),
        migrations.AlterField(
            model_name='background',
            name='languages',
            field=models.TextField(help_text='Description of the languages that the background provides knowledge of.', null=True),
        ),
        migrations.AlterField(
            model_name='background',
            name='name',
            field=models.TextField(help_text='Name of the game content item.'),
        ),
        migrations.AlterField(
            model_name='background',
            name='skill_proficiencies',
            field=models.TextField(help_text='Description of the skills that the background provides proficiency with.', null=True),
        ),
        migrations.AlterField(
            model_name='background',
            name='slug',
            field=models.CharField(default=uuid.uuid1, help_text='Short name for the game content item.', max_length=255, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='background',
            name='suggested_characteristics',
            field=models.TextField(help_text='Currently not implemented.'),
        ),
        migrations.AlterField(
            model_name='background',
            name='tool_proficiencies',
            field=models.TextField(help_text='Description of the tools that the background provides is proficiency with.', null=True),
        ),
        migrations.AlterField(
            model_name='charclass',
            name='desc',
            field=models.TextField(help_text='Description of the game content item. Markdown.'),
        ),
        migrations.AlterField(
            model_name='charclass',
            name='equipment',
            field=models.TextField(help_text='Markdown description of starting equipment.'),
        ),
        migrations.AlterField(
            model_name='charclass',
            name='hit_dice',
            field=models.TextField(help_text='Description of dice for each level such as "1d12 per barbarian level"'),
        ),
        migrations.AlterField(
            model_name='charclass',
            name='hp_at_1st_level',
            field=models.TextField(help_text='Description of the Hit Points at level 1, such as "12 + your Constitution modifier"'),
        ),
        migrations.AlterField(
            model_name='charclass',
            name='hp_at_higher_levels',
            field=models.TextField(help_text='Desciption of increases in Hit Points per level.'),
        ),
        migrations.AlterField(
            model_name='charclass',
            name='name',
            field=models.TextField(help_text='Name of the game content item.'),
        ),
        migrations.AlterField(
            model_name='charclass',
            name='prof_armor',
            field=models.TextField(help_text='Comma-separated list of armor types that the class is proficient with.'),
        ),
        migrations.AlterField(
            model_name='charclass',
            name='prof_saving_throws',
            field=models.TextField(help_text='Comma separated list of saving throw abilities that the class is proficient with.'),
        ),
        migrations.AlterField(
            model_name='charclass',
            name='prof_skills',
            field=models.TextField(help_text='Description of the skills that the class is proficient with.'),
        ),
        migrations.AlterField(
            model_name='charclass',
            name='prof_tools',
            field=models.TextField(help_text='Description of tools the class is proficient with.'),
        ),
        migrations.AlterField(
            model_name='charclass',
            name='prof_weapons',
            field=models.TextField(help_text='Comma-separated list of weapons that the class is proficient with.'),
        ),
        migrations.AlterField(
            model_name='charclass',
            name='slug',
            field=models.CharField(default=uuid.uuid1, help_text='Short name for the game content item.', max_length=255, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='charclass',
            name='spellcasting_ability',
            field=models.TextField(help_text='Ability used for casting spells.'),
        ),
        migrations.AlterField(
            model_name='charclass',
            name='subtypes_name',
            field=models.TextField(help_text='Preferred name for class subtypes, such as "Domains" (for Cleric).'),
        ),
        migrations.AlterField(
            model_name='charclass',
            name='table',
            field=models.TextField(help_text='Table describing class growth by level.'),
        ),
        migrations.AlterField(
            model_name='condition',
            name='desc',
            field=models.TextField(help_text='Description of the game content item. Markdown.'),
        ),
        migrations.AlterField(
            model_name='condition',
            name='name',
            field=models.TextField(help_text='Name of the game content item.'),
        ),
        migrations.AlterField(
            model_name='condition',
            name='slug',
            field=models.CharField(default=uuid.uuid1, help_text='Short name for the game content item.', max_length=255, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='document',
            name='author',
            field=models.TextField(help_text='Author or authors.'),
        ),
        migrations.AlterField(
            model_name='document',
            name='copyright',
            field=models.TextField(help_text='Copyright statement.', null=True),
        ),
        migrations.AlterField(
            model_name='document',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='Date that this object was added to the database.'),
        ),
        migrations.AlterField(
            model_name='document',
            name='desc',
            field=models.TextField(help_text='Description of the document.'),
        ),
        migrations.AlterField(
            model_name='document',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='document',
            name='license',
            field=models.TextField(help_text='The license of the content within the document.'),
        ),
        migrations.AlterField(
            model_name='document',
            name='license_url',
            field=models.TextField(default='http://open5e.com/legal', help_text='URL reference for the license.'),
        ),
        migrations.AlterField(
            model_name='document',
            name='organization',
            field=models.TextField(help_text='Publishing organization.'),
        ),
        migrations.AlterField(
            model_name='document',
            name='title',
            field=models.TextField(help_text='Title of the document.'),
        ),
        migrations.AlterField(
            model_name='document',
            name='url',
            field=models.URLField(help_text='URL reference to get the document.'),
        ),
        migrations.AlterField(
            model_name='document',
            name='version',
            field=models.TextField(help_text='Document version.'),
        ),
        migrations.AlterField(
            model_name='feat',
            name='desc',
            field=models.TextField(help_text='Description of the game content item. Markdown.'),
        ),
        migrations.AlterField(
            model_name='feat',
            name='name',
            field=models.TextField(help_text='Name of the game content item.'),
        ),
        migrations.AlterField(
            model_name='feat',
            name='prerequisite',
            field=models.TextField(help_text='Description of a prerequisite for the character.', null=True),
        ),
        migrations.AlterField(
            model_name='feat',
            name='slug',
            field=models.CharField(default=uuid.uuid1, help_text='Short name for the game content item.', max_length=255, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='magicitem',
            name='desc',
            field=models.TextField(help_text='Description of the game content item. Markdown.'),
        ),
        migrations.AlterField(
            model_name='magicitem',
            name='name',
            field=models.TextField(help_text='Name of the game content item.'),
        ),
        migrations.AlterField(
            model_name='magicitem',
            name='rarity',
            field=models.TextField(help_text='Description of the rarity, such as "rare".'),
        ),
        migrations.AlterField(
            model_name='magicitem',
            name='requires_attunement',
            field=models.TextField(verbose_name='The word "requires attunement" or blank.'),
        ),
        migrations.AlterField(
            model_name='magicitem',
            name='slug',
            field=models.CharField(default=uuid.uuid1, help_text='Short name for the game content item.', max_length=255, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='magicitem',
            name='type',
            field=models.TextField(help_text='Description of the item type, such as "Armor (light)".'),
        ),
        migrations.AlterField(
            model_name='manifest',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='Date that this object was added to the database.'),
        ),
        migrations.AlterField(
            model_name='manifest',
            name='filename',
            field=models.CharField(help_text='Input file name.', max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='manifest',
            name='hash',
            field=models.CharField(help_text='md5 hash of the file contents.', max_length=255),
        ),
        migrations.AlterField(
            model_name='manifest',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='manifest',
            name='type',
            field=models.CharField(help_text='Type of file (maps to a model).', max_length=25),
        ),
        migrations.AlterField(
            model_name='monster',
            name='alignment',
            field=models.TextField(help_text='Short description of the creature alignment, such as "lawful good"'),
        ),
        migrations.AlterField(
            model_name='monster',
            name='armor_class',
            field=models.IntegerField(default=12, help_text='Integer representing the armor class.'),
        ),
        migrations.AlterField(
            model_name='monster',
            name='armor_desc',
            field=models.TextField(help_text='Description of the armor or armor type.', null=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='challenge_rating',
            field=models.TextField(help_text='Monster challenge rating.'),
        ),
        migrations.AlterField(
            model_name='monster',
            name='charisma',
            field=models.IntegerField(help_text='Integer representing the charisma score.', null=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='charisma_save',
            field=models.IntegerField(help_text='Integer representing the charisma save.', null=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='condition_immunities',
            field=models.TextField(help_text='Comma separated list of conditions the monster is immune to.'),
        ),
        migrations.AlterField(
            model_name='monster',
            name='constitution',
            field=models.IntegerField(help_text='Integer representing the constitution score.', null=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='constitution_save',
            field=models.IntegerField(help_text='Integer representing the constitution save.', null=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='cr',
            field=models.FloatField(help_text='Monster challenge rating as a float.', null=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='damage_immunities',
            field=models.TextField(help_text='Comma separated list of damage types the monster is immune to.'),
        ),
        migrations.AlterField(
            model_name='monster',
            name='damage_resistances',
            field=models.TextField(help_text='Comma separated list of damage types the monster is resistant to.'),
        ),
        migrations.AlterField(
            model_name='monster',
            name='damage_vulnerabilities',
            field=models.TextField(help_text='Comma separated list of damage types the monster is vulnerable to.'),
        ),
        migrations.AlterField(
            model_name='monster',
            name='desc',
            field=models.TextField(help_text='Description of the game content item. Markdown.'),
        ),
        migrations.AlterField(
            model_name='monster',
            name='dexterity',
            field=models.IntegerField(help_text='Integer represeting the dexterity score.', null=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='dexterity_save',
            field=models.IntegerField(help_text='Integer representing the dexterity save.', null=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='group',
            field=models.TextField(help_text='Used to group similar creatures at different stages. "Green Dragon"', null=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='hit_dice',
            field=models.TextField(help_text='Dice string representing a way to calculate hit points.'),
        ),
        migrations.AlterField(
            model_name='monster',
            name='hit_points',
            field=models.IntegerField(help_text='Integer of the hit points.', null=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='intelligence',
            field=models.IntegerField(help_text='Integer representing the intelligence score.', null=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='intelligence_save',
            field=models.IntegerField(help_text='Integer representing the intelligence save', null=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='languages',
            field=models.TextField(verbose_name='Comma separated list of languages that the monster speaks.'),
        ),
        migrations.AlterField(
            model_name='monster',
            name='name',
            field=models.TextField(help_text='Name of the game content item.'),
        ),
        migrations.AlterField(
            model_name='monster',
            name='perception',
            field=models.IntegerField(help_text='Integer representing the passive perception score.', null=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='senses',
            field=models.TextField(verbose_name='Comma separated list of senses, such as "blindsight 60ft."'),
        ),
        migrations.AlterField(
            model_name='monster',
            name='size',
            field=models.TextField(help_text='Monster size category.'),
        ),
        migrations.AlterField(
            model_name='monster',
            name='slug',
            field=models.CharField(default=uuid.uuid1, help_text='Short name for the game content item.', max_length=255, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='strength',
            field=models.IntegerField(help_text='Integer representing the strength score.', null=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='strength_save',
            field=models.IntegerField(help_text='Integer representing the strength save.', null=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='subtype',
            field=models.TextField(help_text='If applicable, the subtype of the monster, such as "shapechanger"'),
        ),
        migrations.AlterField(
            model_name='monster',
            name='type',
            field=models.TextField(help_text='The type of the monster, such as "aberration"'),
        ),
        migrations.AlterField(
            model_name='monster',
            name='wisdom',
            field=models.IntegerField(help_text='Integer representing the wisdom score.', null=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='wisdom_save',
            field=models.IntegerField(help_text='Integer representing the wisdom save.', null=True),
        ),
        migrations.AlterField(
            model_name='monsterspell',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='plane',
            name='desc',
            field=models.TextField(help_text='Description of the game content item. Markdown.'),
        ),
        migrations.AlterField(
            model_name='plane',
            name='name',
            field=models.TextField(help_text='Name of the game content item.'),
        ),
        migrations.AlterField(
            model_name='plane',
            name='slug',
            field=models.CharField(default=uuid.uuid1, help_text='Short name for the game content item.', max_length=255, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='race',
            name='age',
            field=models.TextField(help_text='Markdown description of how this race ages.'),
        ),
        migrations.AlterField(
            model_name='race',
            name='alignment',
            field=models.TextField(help_text='Markdown description of the alignment tendencies of the race.'),
        ),
        migrations.AlterField(
            model_name='race',
            name='asi_desc',
            field=models.TextField(help_text='Markdown description of ability score changes for this race.'),
        ),
        migrations.AlterField(
            model_name='race',
            name='desc',
            field=models.TextField(help_text='Description of the game content item. Markdown.'),
        ),
        migrations.AlterField(
            model_name='race',
            name='languages',
            field=models.TextField(help_text='Markdown description of the languages known by the race.'),
        ),
        migrations.AlterField(
            model_name='race',
            name='name',
            field=models.TextField(help_text='Name of the game content item.'),
        ),
        migrations.AlterField(
            model_name='race',
            name='size',
            field=models.TextField(help_text='Markdown description of the size category of the race.'),
        ),
        migrations.AlterField(
            model_name='race',
            name='slug',
            field=models.CharField(default=uuid.uuid1, help_text='Short name for the game content item.', max_length=255, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='race',
            name='speed_desc',
            field=models.TextField(help_text='Markdown description of the speed of the race.'),
        ),
        migrations.AlterField(
            model_name='race',
            name='traits',
            field=models.TextField(help_text='Markdown description of special traits thr race has.'),
        ),
        migrations.AlterField(
            model_name='race',
            name='vision',
            field=models.TextField(help_text='Markdown description of any vision features the race has.'),
        ),
        migrations.AlterField(
            model_name='section',
            name='desc',
            field=models.TextField(help_text='Description of the game content item. Markdown.'),
        ),
        migrations.AlterField(
            model_name='section',
            name='name',
            field=models.TextField(help_text='Name of the game content item.'),
        ),
        migrations.AlterField(
            model_name='section',
            name='slug',
            field=models.CharField(default=uuid.uuid1, help_text='Short name for the game content item.', max_length=255, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='spell',
            name='archetype',
            field=models.TextField(help_text='Archetype that can learn this spell. If empty, assume all archetypes.'),
        ),
        migrations.AlterField(
            model_name='spell',
            name='casting_time',
            field=models.TextField(help_text='Amount of time it takes to cast the spell, such as "1 bonus action" or "4 hours".'),
        ),
        migrations.AlterField(
            model_name='spell',
            name='circles',
            field=models.TextField(help_text='Druid Archetypes that can learn this spell.'),
        ),
        migrations.AlterField(
            model_name='spell',
            name='components',
            field=models.TextField(help_text='Single-character list of V, S, M for Verbal, Somatic, or Material based on the spell requirements.'),
        ),
        migrations.AlterField(
            model_name='spell',
            name='concentration',
            field=models.TextField(help_text='"yes" or "no" based on whether the spell requires concentration.'),
        ),
        migrations.AlterField(
            model_name='spell',
            name='desc',
            field=models.TextField(help_text='Description of the game content item. Markdown.'),
        ),
        migrations.AlterField(
            model_name='spell',
            name='dnd_class',
            field=models.TextField(help_text='List of classes (comma separated) that can learn this spell.'),
        ),
        migrations.AlterField(
            model_name='spell',
            name='duration',
            field=models.TextField(help_text='Description of the duration such as "instantaneous" or "Up to 1 minute"'),
        ),
        migrations.AlterField(
            model_name='spell',
            name='higher_level',
            field=models.TextField(help_text='What happens if you cast this at a higher level.'),
        ),
        migrations.AlterField(
            model_name='spell',
            name='level',
            field=models.TextField(help_text='Description of the level of the spell, such as "4th-level".'),
        ),
        migrations.AlterField(
            model_name='spell',
            name='level_int',
            field=models.IntegerField(help_text='Integer representing the level of the spell. Cantrip is 0.', null=True),
        ),
        migrations.AlterField(
            model_name='spell',
            name='material',
            field=models.TextField(help_text='Description of the material required.'),
        ),
        migrations.AlterField(
            model_name='spell',
            name='name',
            field=models.TextField(help_text='Name of the game content item.'),
        ),
        migrations.AlterField(
            model_name='spell',
            name='page',
            field=models.TextField(help_text='Page number reference for the document.'),
        ),
        migrations.AlterField(
            model_name='spell',
            name='range',
            field=models.TextField(help_text='Text description of the range.'),
        ),
        migrations.AlterField(
            model_name='spell',
            name='ritual',
            field=models.TextField(help_text='"yes" or "no" based on whether or not a ritual is required.'),
        ),
        migrations.AlterField(
            model_name='spell',
            name='school',
            field=models.TextField(help_text='Representation of the school of magic, such as "illusion" or "evocation".'),
        ),
        migrations.AlterField(
            model_name='spell',
            name='slug',
            field=models.CharField(default=uuid.uuid1, help_text='Short name for the game content item.', max_length=255, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='subrace',
            name='asi_desc',
            field=models.TextField(help_text='Markdown description of ability score changes for this subrace.'),
        ),
        migrations.AlterField(
            model_name='subrace',
            name='desc',
            field=models.TextField(help_text='Description of the game content item. Markdown.'),
        ),
        migrations.AlterField(
            model_name='subrace',
            name='name',
            field=models.TextField(help_text='Name of the game content item.'),
        ),
        migrations.AlterField(
            model_name='subrace',
            name='slug',
            field=models.CharField(default=uuid.uuid1, help_text='Short name for the game content item.', max_length=255, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='subrace',
            name='traits',
            field=models.TextField(help_text='Markdown description of special traits thr race has.'),
        ),
        migrations.AlterField(
            model_name='weapon',
            name='category',
            field=models.TextField(help_text='Category of the weapon, such as "Martial Melee Weapons"'),
        ),
        migrations.AlterField(
            model_name='weapon',
            name='cost',
            field=models.TextField(help_text='Suggested cost of the weapon, such as "100 gp"'),
        ),
        migrations.AlterField(
            model_name='weapon',
            name='damage_dice',
            field=models.TextField(help_text='Dice string of the weapon damage, such as "1d8".'),
        ),
        migrations.AlterField(
            model_name='weapon',
            name='damage_type',
            field=models.TextField(help_text='Damage type of the weapon, such as "bludgeoning".'),
        ),
        migrations.AlterField(
            model_name='weapon',
            name='desc',
            field=models.TextField(help_text='Description of the game content item. Markdown.'),
        ),
        migrations.AlterField(
            model_name='weapon',
            name='name',
            field=models.TextField(help_text='Name of the game content item.'),
        ),
        migrations.AlterField(
            model_name='weapon',
            name='properties_json',
            field=models.TextField(help_text='List of properties that the weapon has.'),
        ),
        migrations.AlterField(
            model_name='weapon',
            name='slug',
            field=models.CharField(default=uuid.uuid1, help_text='Short name for the game content item.', max_length=255, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='weapon',
            name='weight',
            field=models.TextField(help_text='Weight of the item, such as "1 lb.".'),
        ),
    ]
